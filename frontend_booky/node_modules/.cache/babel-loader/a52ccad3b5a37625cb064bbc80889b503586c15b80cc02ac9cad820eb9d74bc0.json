{"ast":null,"code":"import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport store from './store';\nimport axios from 'axios';\naxios.defaults.baseURL = 'http://127.0.0.1:8000/api/v1/';\nconst app = createApp(App);\napp.use(store);\napp.use(router);\napp.mount('#app');\nexport default {\n  methods: {\n    async fetchData() {\n      try {\n        const response = await axios.get('/endpoint');\n        console.log(response.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["createApp","App","router","store","axios","defaults","baseURL","app","use","mount","methods","fetchData","response","get","console","log","data","error"],"sources":["/home/yurii/Booky/frontend_booky/src/main.js"],"sourcesContent":["import { createApp } from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport store from './store'\nimport axios from 'axios'\n\n\naxios.defaults.baseURL = 'http://127.0.0.1:8000/api/v1/'\n\nconst app = createApp(App)\n\napp.use(store)\napp.use(router)\n\n\napp.mount('#app')\n\n\nexport default {\n    methods: {\n      async fetchData() {\n        try {\n          const response = await axios.get('/endpoint')\n          console.log(response.data)\n        } catch (error) {\n          console.error('Error fetching data:', error)\n        }\n      }\n    }\n  }"],"mappings":"AAAA,SAASA,SAAS,QAAQ,KAAK;AAC/B,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,KAAK,MAAM,OAAO;AAGzBA,KAAK,CAACC,QAAQ,CAACC,OAAO,GAAG,+BAA+B;AAExD,MAAMC,GAAG,GAAGP,SAAS,CAACC,GAAG,CAAC;AAE1BM,GAAG,CAACC,GAAG,CAACL,KAAK,CAAC;AACdI,GAAG,CAACC,GAAG,CAACN,MAAM,CAAC;AAGfK,GAAG,CAACE,KAAK,CAAC,MAAM,CAAC;AAGjB,eAAe;EACXC,OAAO,EAAE;IACP,MAAMC,SAASA,CAAA,EAAG;MAChB,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,WAAW,CAAC;QAC7CC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}